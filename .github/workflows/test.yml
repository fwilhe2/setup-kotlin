name: 'build-test'
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '25'
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js 22.x
        uses: actions/setup-node@v5
        with:
          node-version: "22.x"
          cache: 'yarn'
      - run: |
          yarn
      - run: |
          yarn run all
        env:
          INPUT_VERSION: 2.2.10
          INPUT_INSTALL-NATIVE: false
      - run: |
          git diff --name-only --exit-code
      - run: |
          node dist/index.js

          if ! [ -x "$(command -v kotlinc)" ]; then
            echo 'Error: Expected kotlinc to be installed.' >&2
            exit 1
          fi
        env:
          INPUT_VERSION: 2.2.10
          INPUT_INSTALL-NATIVE: false

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v5
      - uses: ./

  test-with-arg:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '25'
      - uses: ./
        with:
          version: 2.2.10
          script: |
              #!/usr/bin/env kotlin
              fun getInput(name: String): String {
                  return System.getenv("INPUT_${name.replace(" ", "_").uppercase()}")
              }
              if (getInput("version") != "2.2.10") {
                throw RuntimeException("Expected version 2.2.10")
              }

  test-with-arg-default-version:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '25'
      - uses: ./
        with:
          script: |
              #!/usr/bin/env kotlin
              fun getInput(name: String): String {
                  return System.getenv("INPUT_${name.replace(" ", "_").uppercase()}")
              }
              if (getInput("version") != "2.2.10") {
                throw RuntimeException("Expected version 2.2.10")
              }

  test-with-native:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '25'
      - uses: ./
        with:
          version: 2.2.10
          install-native: true
      - run: kotlinc -version
      - run: kotlinc-native -version
      - run: echo 'fun main() {println("Hello Kotlin/Native!")}' > hello.kt
      - run: kotlinc-native hello.kt
      - run: ./program.exe
        if: ${{ matrix.os == 'windows-latest' }}
      - run: ./program.kexe
        if: ${{ matrix.os != 'windows-latest' }}

  validate-typings:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v5
      - uses: typesafegithub/github-actions-typing@v2
