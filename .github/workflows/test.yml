name: 'build-test'
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm ci
      - run: |
          npm run all
      - run: |
          git diff --name-only --exit-code

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: ./

  test-with-arg:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          version: 1.4.20
          script: |
              #!/usr/bin/env kotlin
              fun getInput(name: String): String {
                  return System.getenv("INPUT_${name.replace(" ", "_").toUpperCase()}")
              }
              if (getInput("version") != "1.4.20") {
                throw RuntimeException("Expected version 1.4.20")
              }

  test-with-arg-default-version:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          script: |
              #!/usr/bin/env kotlin
              fun getInput(name: String): String {
                  return System.getenv("INPUT_${name.replace(" ", "_").toUpperCase()}")
              }
              if (getInput("version") != "1.4.20") {
                throw RuntimeException("Expected version 1.4.20")
              }
